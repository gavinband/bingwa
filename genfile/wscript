import os.path
import glob
#import UnitTest

def configure( conf ):
	pass

def create_tests( bld ):
	bld.new_task_gen(
		features = 'cxx cprogram',
		target = 'all_tests',
		source = bld.glob( 'test/*.cpp' ),
		uselib_local = 'genfile boost boost-unit_test_framework',
		uselib = 'ZLIB',
		includes='./include',
		unit_test=1,
		install_path=None
	)

def create_benchmark( bld, name ):
	bld.new_task_gen(
		features = 'cxx cprogram',
		target = name,
		source = [  'benchmark/' + name + '.cpp' ],
		uselib_local = 'genfile boost',
		uselib = 'ZLIB',
		includes = './include',\
		export_incdirs = './include',
		install_path = None
	)

def build( bld ):
	import Options
	
	#---------------------
	# libs
	#---------------------
	bld.new_task_gen(
		features = 'cxx cstaticlib',
		target = 'genfile',
		source = bld.glob( 'src/*.cpp' ) + bld.glob( 'src/bgen/*.cpp' ) + bld.glob( 'src/vcf/*.cpp' ) + bld.glob( 'src/string_utils/*.cpp' ),
		includes='./include',
		uselib_local = 'boost eigen',
		uselib = 'ZLIB',
		export_incdirs = './include'
	)

	create_benchmark( bld, 'benchmark-io' )
