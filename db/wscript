import os.path
import glob
#import UnitTest

def configure( conf ):
	pass

def create_test( bld, name ):
	bld(
		features = 'cxx cprogram',
		target = name,
		source = [  'test/' + name + '.cpp' ],
		uselib_local = 'db',
		uselib = 'BOOST_THREAD PTHREAD BOOST_DATE_TIME BOOST_IOSTREAMS BOOST_UNIT_TEST_FRAMEWORK DL ZLIB',
		includes='./include',
		unit_test=1,
		install_path=None
	)

def create_benchmark( bld, name ):
	bld(
		features = 'cxx cprogram',
		target = name,
		source = [  'benchmarks/' + name + '.cpp' ],
		uselib_local = 'db',
		includes='./include',
		install_path=None
	)


def build( bld ):
	import Options
	
	#---------------------
	# libs
	#---------------------
	bld(
		features = 'cxx cstaticlib',
		target = 'db',
		source = bld.glob( 'src/*.cpp' ),
		includes='./include',
		uselib = 'BOOST_DATE_TIME ZLIB BOOST_IOSTREAMS ZLIB',
		uselib_local = 'genfile sqlite3',
		export_incdirs = './include'
	)
	
	create_test( bld, "test_fill_SQL" ) ;
	create_test( bld, "test_get_unique_id" ) ;
	create_test( bld, "test_load_key_value_pairs" ) ;
